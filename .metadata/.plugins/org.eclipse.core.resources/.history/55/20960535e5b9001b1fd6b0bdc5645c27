package com.aforo255.test.service;

import org.springframework.stereotype.Service;
import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;

import com.aforo255.test.entity.Invoice;
import com.aforo255.test.entity.Transaction;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

@Service
public class TransactionEvents {
	@Autowired
	private IInvoiceService invoiceService ; 
	private Logger log = LoggerFactory.getLogger(TransactionEvents.class);
	@Autowired
	private ObjectMapper objectMapper ; 
	
	public void processTransactionEvent(ConsumerRecord<Integer, String> consumerRecord) throws JsonMappingException, JsonProcessingException {
		double newAmount= 0 ; 
		Invoice account = new Invoice();
		Transaction event = objectMapper.readValue(consumerRecord.value(), Transaction.class);
		account = invoiceService.findById(event.getInvoiceId());
		switch(event.getType()) {
		case "deposito":
			newAmount =  account.getTotalAmount() + event.getAmount();
			break ; 
			
		case "retiro":
			newAmount =  account.getTotalAmount()  - event.getAmount();
			break ; 	
		
		}
		account.setTotalAmount(newAmount);
		log.info("Actulizando NÂ° cuenta ***"+event.getInvoiceId());
		invoiceService.save(account);
	}
	
}